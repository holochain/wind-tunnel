name: "Run performance tests on Nomad cluster"

on:
  workflow_dispatch:
    inputs:
      holochain_bin_url:
        description: "The URL to download the `holochain` binary from"
  schedule:
    - cron: "0 0 * * 4" # Run Nomad workflow at 00:00 on Thursdays

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  run-scenarios:
    name: Run ${{ matrix.job-name || matrix.scenario-name }}
    runs-on: [self-hosted, wind-tunnel]
    strategy:
      max-parallel: 1
      fail-fast: false
      # `job-name` defaults to `scenario-name` if not provided.
      # `required-nodes` defaults to `1` if not provided.
      matrix:
        scenario-name:
          - first_call
          - local_signals
          - remote_call_rate
          - remote_signals
          # - single_write_many_read TODO: Fix this scenario and re-enable it
          # - two_party_countersigning TODO: Fix this scenario and re-enable it
          - write_query
          - write_read
          - write_validated
          - zome_call_single_value
        include:
          # TODO: Fix this scenario and re-enable it
          # - job-name: app_install_large
          #   scenario-name: app_install

          # TODO: Fix this scenario and re-enable it
          # - job-name: app_install_minimal
          #   scenario-name: app_install

          - scenario-name: dht_sync_lag
            required-nodes: 2

          # TODO: Fix this scenario and re-enable it
          # - scenario-name: validation_receipts
          #   required-nodes: 2

          # TODO: Fix this scenario and re-enable it
          # - scenario-name: write_get_agent_activity
          #   required-nodes: 2

          - scenario-name: write_validated_must_get_agent_activity
            required-nodes: 2

    steps:
      - uses: actions/checkout@v5

      - name: Build Nomad Job
        env:
          RUN_ID: "${{ matrix.job-name || matrix.scenario-name }}_${{ github.run_id }}"
        run: |
          nix run .#generate-nomad-jobs ${{ matrix.job-name || matrix.scenario-name }}

      - name: Build scenario
        run: nix build .#packages.x86_64-linux.${{ matrix.scenario-name }}

      - name: Upload scenario as artifact
        id: upload-scenario
        uses: actions/upload-artifact@v4
        with:
          path: |
            ./result/bin/
            ./result/happs/
          name: ${{ matrix.job-name || matrix.scenario-name }}
          if-no-files-found: error

      - name: Wait for free nodes
        env:
          NIXPKGS_ALLOW_UNFREE: 1
          NOMAD_ADDR: https://nomad-server-01.holochain.org:4646
          NOMAD_CACERT: "${{ github.workspace }}/nomad/server-ca-cert.pem"
          NOMAD_TOKEN: ${{ secrets.NOMAD_ACCESS_TOKEN }}
        run: |
          echo "Waiting for ${{ matrix.required-nodes || 1 }} node(s) to be free"
          while true; do
              count=$(nix run --impure --inputs-from . nixpkgs#nomad -- node status -allocs | awk 'NR > 1 {if (($8 == "ready") && ($9 == 0)) count+=1} END {print count}')
              if (( ${count:-0} >= ${{ matrix.required-nodes || 1 }} )); then
                  break
              else
                  echo -n "."
              fi
              sleep 5
          done
          echo "done"

      - name: Get Download URL
        id: get-download-url
        run: |
          DOWNLOAD_URL=$(curl -Ls -o /dev/null -w %{url_effective} \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ github.token }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/holochain/wind-tunnel/actions/artifacts/${{ steps.upload-scenario.outputs.artifact-id}}/zip")
          echo "download-url=$DOWNLOAD_URL" >> "$GITHUB_OUTPUT"

      - name: Run Nomad Job
        id: run-nomad-job
        env:
          NIXPKGS_ALLOW_UNFREE: 1
          NOMAD_ADDR: https://nomad-server-01.holochain.org:4646
          NOMAD_CACERT: "${{ github.workspace }}/nomad/server-ca-cert.pem"
          NOMAD_TOKEN: ${{ secrets.NOMAD_ACCESS_TOKEN }}
          NOMAD_VAR_scenario_url: ${{ steps.get-download-url.outputs.download-url }}
          NOMAD_VAR_run_id: "${{ matrix.job-name || matrix.scenario-name }}_${{ github.run_id }}"
          NOMAD_VAR_holochain_bin_url: "${{ inputs.holochain_bin_url || 'https://github.com/holochain/holochain/releases/latest/download/holochain-go-pion-unstable-x86_64-unknown-linux-gnu' }}"
          RUN_ID: "${{ matrix.job-name || matrix.scenario-name }}_${{ github.run_id }}"
        run: |-
          set -euo pipefail
          nomad_output=$(nix run --impure --inputs-from . nixpkgs#nomad -- job run nomad/jobs/${{ matrix.job-name || matrix.scenario-name }}.nomad.hcl)
          echo "$nomad_output"
          echo "Ran ${{ matrix.job-name || matrix.scenario-name }} with run ID ${RUN_ID}" >> "$GITHUB_STEP_SUMMARY"
          alloc_ids=$(echo "$nomad_output" | grep -oP --color=never 'Allocation "\K[0-9a-f]+(?=" created)' | paste -sd ' ' -)
          if [ -z "$alloc_ids" ]; then
            echo "Failed to extract allocation IDs from Nomad job output"
            exit 1
          fi

          echo "alloc_ids=$alloc_ids" >> "$GITHUB_OUTPUT"
          echo "started_at=$(date +%s)" >> "$GITHUB_OUTPUT"

      - name: Save alloc_ids to file
        env:
          RUN_ID: "${{ matrix.job-name || matrix.scenario-name }}_${{ github.run_id }}"
        run: |
          started_at=${{ steps.run-nomad-job.outputs.started_at }}
          nix develop --command ./nomad/scripts/ci_allocs.sh make_allocs_csv alloc_ids.csv "${{ matrix.job-name || matrix.scenario-name }}" "${{ matrix.scenario-name }}" "${RUN_ID}" "${started_at}" "${{ steps.run-nomad-job.outputs.alloc_ids }}"

      - name: Upload alloc_ids
        uses: actions/upload-artifact@v4
        with:
          name: alloc_ids_${{ matrix.job-name || matrix.scenario-name }}
          path: alloc_ids.csv

  wait-for-all-jobs:
    name: Wait for all jobs to finish
    runs-on: [self-hosted, wind-tunnel]
    needs: run-scenarios
    steps:
      - uses: actions/checkout@v5

      - name: Download all alloc_ids
        uses: actions/download-artifact@v5
        with:
          path: ./alloc_ids

      - name: Wait for all jobs
        env:
          NOMAD_ADDR: https://nomad-server-01.holochain.org:4646
          NOMAD_CACERT: "${{ github.workspace }}/nomad/server-ca-cert.pem"
          NOMAD_TOKEN: ${{ secrets.NOMAD_ACCESS_TOKEN }}
          TIMEOUT: 5400
        run: |-
          cat ./alloc_ids/*/alloc_ids.csv > all_alloc_ids.csv
          nix develop --command ./nomad/scripts/ci_allocs.sh wait_for_jobs all_alloc_ids.csv

      - name: Prepare run summary
        env:
          NIXPKGS_ALLOW_UNFREE: 1
          NOMAD_ADDR: https://nomad-server-01.holochain.org:4646
          NOMAD_CACERT: "${{ github.workspace }}/nomad/server-ca-cert.pem"
          NOMAD_TOKEN: ${{ secrets.NOMAD_ACCESS_TOKEN }}
          RUN_SUMMARY_PATH: ./run_summary.jsonl
        run: |
          cat ./alloc_ids/*/alloc_ids.csv > all_alloc_ids.csv
          nix develop --command ./nomad/scripts/ci_allocs.sh generate_run_summary all_alloc_ids.csv $RUN_SUMMARY_PATH
          cat $RUN_SUMMARY_PATH >> "$GITHUB_STEP_SUMMARY"

      - name: Run summariser
        env:
          INFLUX_HOST: "https://ifdb.holochain.org"
          INFLUX_BUCKET: "windtunnel"
          INFLUX_TOKEN: ${{ secrets.INFLUX_TOKEN }}
          RUN_SUMMARY_PATH: ./run_summary.jsonl
          RUST_LOG: debug
        run: nix develop --command cargo run --release --bin holochain-summariser

      - name: Upload run summary
        uses: actions/upload-artifact@v4
        with:
          name: summariser-report
          if-no-files-found: ignore
          path: ./summariser-report-*.json
